generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(COLABORADOR)
  createdAt DateTime @default(now())
  avatarUrl String?
  vehicleId String?
  vehicle   Vehicle? @relation(fields: [vehicleId], references: [id])
  kmRecords   KmRecord[]
  rotaRecords RotaRecord[]
  fuelRecords FuelRecord[]
}

model Vehicle {
  id              String          @id @default(uuid())
  placa           String          @unique
  modelo          String?
  ano             Int?
  tipoCombustivel TipoCombustivel
  users User[] 
  kmRecords   KmRecord[]
  fuelRecords FuelRecord[]
  rotaRecords RotaRecord[]

  createdAt DateTime @default(now())
}



model KmRecord {
  id         String   @id @default(uuid())
  vehicle    Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId  String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  km         Float
  photoUrl   String
  observacao String?
  createdAt  DateTime @default(now())
}

model FuelRecord {
  id             String         @id @default(uuid())
  vehicle        Vehicle        @relation(fields: [vehicleId], references: [id])
  vehicleId      String
  user           User           @relation(fields: [userId], references: [id])
  userId         String
  litros         Float
  valor          Float
  situacaoTanque SituacaoTanque
  kmAtual        Float
  photoUrl       String
  observacao     String?
  createdAt      DateTime       @default(now())
}

enum Role {
  COLABORADOR
  SUPERVISOR
  ADMIN
}

enum TipoCombustivel {
  GASOLINA
  ALCOOL
  DIESEL
  FLEX
}

enum SituacaoTanque {
  CHEIO
  MEIO_TANQUE
  QUASE_VAZIO
}

model RotaRecord {
  id                String   @id @default(uuid())
  vehicle           Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId         String
  user              User     @relation(fields: [userId], references: [id])
  userId            String
  kmSaida           Float
  photoUrl          String
  partida           String
  destino           String
  alterouRota       Boolean  @default(false)
  alteracaoRota     String?
  realizouAbastecimento Boolean @default(false)
  createdAt         DateTime @default(now())
}
